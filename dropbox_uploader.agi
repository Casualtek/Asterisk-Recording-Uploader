#!/usr/bin/env python
# -*- coding: utf-8 -*-

import os, sys, dropbox, json, requests
from asterisk.agi import *

webhook_url = <WEBHOOK_URL_SLACK>
ACCESS_TOKEN = <ACCESS_TOKEN_DROPBOX>
CHUNK_SIZE = 50 * 1024 * 1024

agi = AGI()
file_path = agi.env['agi_arg_1']
dest_path = agi.env['agi_arg_2']

if not os.path.exists(file_path): 
	raise Exception("File {} does not exist".format(file_path))

file_size = os.path.getsize(file_path)
dbx = dropbox.Dropbox(ACCESS_TOKEN)

if file_size <= CHUNK_SIZE:
	with open(file_path, "rb") as f:
		dbx.files_upload(f.read(), dest_path, mute=False)
else:
	file = open(file_path)
	upload_session_start_result = dbx.files_upload_session_start(file.read(CHUNK_SIZE))
	cursor = dropbox.files.UploadSessionCursor(session_id=upload_session_start_result.session_id, offset= file.tell())
	commit = dropbox.files.CommitInfo(path=dest_path)
	while file.tell() < file_size:
		if ((file_size - file.tell() ) <= CHUNK_SIZE):
			dbx.files_upload_session_finish(file.read(CHUNK_SIZE), cursor, commit)
		else:
			dbx.files_upload_session_append(file.read(CHUNK_SIZE), cursor.session_id, cursor.offset)
		cursor.offset = file.tell()

tempLink = dbx.files_get_temporary_link(dest_path).link
slack_data = {	'text': '@<USER_SLACK>, the recording of your last phone call is ready.', 
				'color': 'good',
				'attachments': [
				{
					'title': 'Get the recording file',
					'title_link': tempLink
				}
				], 
				'channel': '<BOT_SLACK>'}
				
response = requests.post(
	webhook_url, data=json.dumps(slack_data),
	headers={'Content-Type': 'application/json'}
)

sys.exit(0)
